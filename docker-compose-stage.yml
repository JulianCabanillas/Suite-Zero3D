version: '3.8'

services:
  db:
    image: postgres:15
    env_file:
      - ./Client-Back-Zero3D/.env.staging
    environment:
      POSTGRES_DB: zero3d_stage_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - zero3d_stage_postgres_data:/var/lib/postgresql/data
      - ./Client-Back-Zero3D/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - zero3d_stage_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d zero3d_stage_db"]
      interval: 10s
      retries: 5
    deploy:
      replicas: 1
      restart_policy:
        condition: any

  backend:
    
    image: juliancabanillas/zero3d-backend:stage
    env_file:
      - ./Client-Back-Zero3D/.env.staging 
    depends_on:
      - db
    volumes:
      - zero3d_stage_static_volume:/app/staticfiles
    networks:
      - zero3d_stage_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  frontend:
    image: juliancabanillas/zero3d-frontend:stage
    environment:
      - NODE_ENV=production
    volumes:
    - zero3d_stage_frontend_dist:/dist
    networks:
      - zero3d_stage_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  nginx:
    image: juliancabanillas/zero3d-nginx:stage
    ports:
      - "8080:80"
    volumes:
      - zero3d_stage_static_volume:/app/staticfiles
      - zero3d_stage_frontend_dist:/usr/share/nginx/html:ro
      - ./Nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - zero3d_stage_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      
      
      
  pgadmin:
    image: dpage/pgadmin4
    #container_name: zero3d_stage_pgAdmin
    env_file:
      - ./Client-Back-Zero3D/.env.staging
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5051:80"
    volumes:
      - zero3d_stage_pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - zero3d_stage_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  portainer:
    image: portainer/portainer-ce:latest
    #container_name: zero3d_stage_portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - zero3d_stage_portainer_data:/data
    ports:
      - "9001:9000"
    networks:
      - zero3d_stage_network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  zero3d_stage_postgres_data:
  zero3d_stage_pgadmin_data:
  zero3d_stage_static_volume:
  zero3d_stage_frontend_dist:
  zero3d_stage_portainer_data:build:
      context: ./Nginx
      dockerfile: Dockerfile
    #container_name: zero3d_stage_nginx

networks:
  zero3d_stage_network:
    driver: overlay