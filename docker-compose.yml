version: '3.8'

services:
  db:
    image: postgres:15
    container_name: zero3d_prod_db
    restart: unless-stopped
    env_file:
      - ./Client-Back-Zero3D/.env.production
    environment:
      POSTGRES_DB: zero3d_prod_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./Client-Back-Zero3D/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - zero3d_prod_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d zero3d_prod_db"]
      interval: 10s
      retries: 5


  backend:
    build:
      context: ./Client-Back-Zero3D
      dockerfile: Dockerfile
    container_name: zero3d_prod_back
    image: zero3d-backend:prod
    env_file:
      - ./Client-Back-Zero3D/.env.production 
    depends_on:
        db:
          condition: service_healthy
    volumes:
      - static_volume_prod:/app/staticfiles
    networks:
      - zero3d_prod_network

  frontend:
    build: 
      context: ./Client-Front-Zero3D
      dockerfile: Dockerfile
    image: zero3d-frontend:prod
    container_name: zero3d_prod_front 
    environment:
      - NODE_ENV=production
    volumes:
    - frontend_dist_prod:/dist
    networks:
      - zero3d_prod_network

  nginx:
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    container_name: zero3d_prod_nginx
    image: zero3d-nginx:prod
    cpuset: "1"
    cpus: "1.0"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume_prod:/app/staticfiles
      - frontend_dist_prod:/usr/share/nginx/html:ro
      - ./Nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
      - frontend
    networks:
      - zero3d_prod_network
      
  pgadmin:
    image: dpage/pgadmin4
    container_name: zero3d_prod_pgAdmin
    env_file:
      - ./Client-Back-Zero3D/.env.production
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data_prod:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - zero3d_prod_network

  portainer:
    image: portainer/portainer-ce:latest
    container_name: zero3d_prod_portainer
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data_prod:/data
    ports:
      - "9000:9000"
    networks:
      - zero3d_prod_network

volumes:
  postgres_data_prod:
  pgadmin_data_prod:
  static_volume_prod:
  frontend_dist_prod:
  portainer_data_prod:

networks:
  zero3d_prod_network:
    driver: bridge