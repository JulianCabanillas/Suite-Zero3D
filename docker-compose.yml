version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: zero3d_db
    env_file:
      - ./Client-Back-Zero3D/.env.development 
    environment:
      POSTGRES_DB: db_zero3d_dev
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./Client-Back-Zero3D/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - zero3d_dev_network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d db_zero3d"]
      interval: 10s
      retries: 5

  frontend:
    build:
      context: ./Client-Front-Zero3D
      dockerfile: Dockerfile
    container_name: zero3d_preact_front 
    command: npm run dev
    volumes:
      - ./Client-Front-Zero3D:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - zero3d_dev_network
    environment:
      - NODE_ENV=development


  backend:
    build:
      context: ./Client-Back-Zero3D
      dockerfile: Dockerfile.dev
    container_name: zero3d_django_back
    command: /entrypoint.sh
    env_file:
      - ./Client-Back-Zero3D/.env.development
    environment:
      DJANGO_SETTINGS_MODULE: appBackClient.settings.development
      DB_NAME: db_zero3d_dev
      DB_USER: admin
      DB_PASSWORD: admin
      DB_HOST: db
      DB_PORT: 5432
      SLIC3R_PATH: /usr/bin/slic3r
      ALLOWED_HOSTS: localhost,127.0.0.1
    depends_on:
        db:
          condition: service_healthy
    volumes:
      - ./Client-Back-Zero3D:/app
    ports:
      - "8000:8000"
    networks:
      - zero3d_dev_network
    
      
  pgadmin:
    image: dpage/pgadmin4
    container_name: zero3d_pgAdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin  
    depends_on:
      - db
    networks:
      - zero3d_dev_network

volumes:
  postgres_data_dev:
  pgadmin_data:

networks:
  zero3d_dev_network:
    driver: bridge